{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micok\\\\react-final-task\\\\src\\\\components\\\\Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { GoogleMap, withGoogleMap, withScriptjs, Marker, InfoWindow } from 'react-google-maps';\nimport locationPin from \"./images/location.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Map({\n  Markers\n}) {\n  _s();\n\n  const [selectedActivity, setSelectedActivity] = useState(null);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    defaultZoom: 8,\n    defaultCenter: {\n      lat: 42.795,\n      lng: 19.233\n    },\n    children: [Markers.map(activitie => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lng: activitie.lat,\n          lat: activitie.lon\n        },\n        onClick: () => {\n          setSelectedActivity(activitie);\n        },\n        icon: {\n          url: locationPin,\n          scaledSize: new window.google.maps.Size(50, 50)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this);\n    }), selectedActivity && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lng: selectedActivity.lat,\n        lat: selectedActivity.lon\n      },\n      onCloseClick: () => {\n        setSelectedActivity(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: selectedActivity.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedActivity.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 8\n  }, this);\n}\n\n_s(Map, \"UDwCIWj2uxE/8PVm1wuA2aVp8aM=\");\n\n_c = Map;\nconst WrappedMap = withScriptjs(_c2 = withGoogleMap(Map));\n_c3 = WrappedMap;\nexport default WrappedMap;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"WrappedMap$withScriptjs\");\n$RefreshReg$(_c3, \"WrappedMap\");","map":{"version":3,"sources":["C:/Users/micok/react-final-task/src/components/Map.js"],"names":["React","useState","GoogleMap","withGoogleMap","withScriptjs","Marker","InfoWindow","Map","Markers","selectedActivity","setSelectedActivity","lat","lng","map","activitie","lon","url","locationPin","scaledSize","window","google","maps","Size","location","title","WrappedMap"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,SAAR,EAAmBC,aAAnB,EAAkCC,YAAlC,EAA+CC,MAA/C,EAAsDC,UAAtD,QAAuE,mBAAvE;;;;AAGA,SAASC,GAAT,CAAa;AAACC,EAAAA;AAAD,CAAb,EAAwB;AAAA;;AACpB,QAAM,CAACC,gBAAD,EAAkBC,mBAAlB,IAAuCT,QAAQ,CAAC,IAAD,CAArD;AACA,sBACG,QAAC,SAAD;AACA,IAAA,WAAW,EAAE,CADb;AAEA,IAAA,aAAa,EAAE;AAACU,MAAAA,GAAG,EAAC,MAAL;AAAYC,MAAAA,GAAG,EAAC;AAAhB,KAFf;AAAA,eAIEJ,OAAO,CAACK,GAAR,CAAaC,SAAD,IAAa;AACtB,0BAAQ,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE;AAACF,UAAAA,GAAG,EAACE,SAAS,CAACH,GAAf;AAAmBA,UAAAA,GAAG,EAACG,SAAS,CAACC;AAAjC,SAAlB;AACR,QAAA,OAAO,EAAE,MAAI;AACTL,UAAAA,mBAAmB,CAACI,SAAD,CAAnB;AACH,SAHO;AAKR,QAAA,IAAI,EAAE;AACFE,UAAAA,GAAG,EAACC,WADF;AAEFC,UAAAA,UAAU,EAAE,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,IAAvB,CAA4B,EAA5B,EAA+B,EAA/B;AAFV;AALE;AAAA;AAAA;AAAA;AAAA,cAAR;AAUH,KAXA,CAJF,EAgBEb,gBAAgB,iBACb,QAAC,UAAD;AACA,MAAA,QAAQ,EAAE;AAACG,QAAAA,GAAG,EAACH,gBAAgB,CAACE,GAAtB;AAA0BA,QAAAA,GAAG,EAACF,gBAAgB,CAACM;AAA/C,OADV;AAEA,MAAA,YAAY,EAAE,MAAI;AACdL,QAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH,OAJD;AAAA,6BAMI;AAAA,gCACI;AAAA,oBAAMD,gBAAgB,CAACc;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCAAK;AAAA,sBAAKd,gBAAgB,CAACe;AAAtB;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YAjBL;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAgCH;;GAlCQjB,G;;KAAAA,G;AAoCT,MAAMkB,UAAU,GAAGrB,YAAY,OAACD,aAAa,CAACI,GAAD,CAAd,CAA/B;MAAMkB,U;AAEN,eAAeA,UAAf","sourcesContent":["import React,{useState} from 'react'\r\nimport {GoogleMap, withGoogleMap, withScriptjs,Marker,InfoWindow} from 'react-google-maps'\r\nimport locationPin from './images/location.svg';\r\n\r\nfunction Map({Markers}) {\r\n    const [selectedActivity,setSelectedActivity]=useState(null)\r\n    return (\r\n       <GoogleMap \r\n       defaultZoom={8}\r\n       defaultCenter={{lat:42.795,lng:19.233}}>\r\n\r\n        {Markers.map((activitie)=>{\r\n            return (<Marker position={{lng:activitie.lat,lat:activitie.lon}}\r\n            onClick={()=>{\r\n                setSelectedActivity(activitie)\r\n            }}\r\n            \r\n            icon={{\r\n                url:locationPin,\r\n                scaledSize: new window.google.maps.Size(50,50)\r\n            }}\r\n            />)\r\n        })}\r\n        {selectedActivity && (\r\n            <InfoWindow\r\n            position={{lng:selectedActivity.lat,lat:selectedActivity.lon}}\r\n            onCloseClick={()=>{\r\n                setSelectedActivity(null)\r\n            }}\r\n            >\r\n                <div>\r\n                    <div>{selectedActivity.location}</div>\r\n                    <div><h3>{selectedActivity.title}</h3></div>\r\n                </div>\r\n            </InfoWindow>\r\n        )}\r\n       </GoogleMap>\r\n    )\r\n}\r\n\r\nconst WrappedMap = withScriptjs(withGoogleMap(Map))\r\n\r\nexport default WrappedMap\r\n"]},"metadata":{},"sourceType":"module"}